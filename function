# Cross-tabulation + chi_squre + logistic regression + odds ratio + confidence interval
# 列聯表+卡方+羅吉斯迴歸+勝算比+信賴區間
basic_biometrics_fn <- function(x,y){
  # Creating Cross-tabulation
  # 建立列聯表
  table <- table(x, y)
  # Perform a chi-square test
  # 執行卡方檢驗
  chisq <- chisq.test(table)  
  # Perform logistic regression
  # 執行羅吉斯迴歸
  logistic_model <- glm(y ~ x, family=binomial)
  # Calculate odds ratio
  # 計算勝算比
  odds_ratios <- exp(coef(logistic_model))
  # Calculate confidence interval
  # 計算信賴區間
  CI <- exp(confint(logistic_model))
  need_list <- list(table = table, chisq_test = chisq,
                    logistic = summary(logistic_model), odds_ratios = odds_ratios, Confidence_Interval = CI)
  return(need_list)
} 

-----------------------------------------------------------------------------------------------------------------------------------------------------
### Table function

# 將logistic model轉為表格需要格式
generate_table_data <- function(model) {
  # 提取模型摘要
  model_summary <- summary(model)
  
  # 提取係數和標準誤差
  coefficients <- coef(model)
  std_errors <- model_summary$coefficients[, "Std. Error"]
  
  # 計算OR和95%信賴區間
  OR <- exp(coefficients)
  lower_95_CI <- exp(coefficients - 1.96 * std_errors)
  upper_95_CI <- exp(coefficients + 1.96 * std_errors)
  
  # 提取P值
  p_values <- model_summary$coefficients[, "Pr(>|z|)"]
  
  # 創建結果表並格式化P值
  table_data <- data.frame(
    Coefficient = round(coefficients, 2),
    OR = round(OR, 2),
    Lower_95_CI = round(lower_95_CI, 2),
    Upper_95_CI = round(upper_95_CI, 2),
    P_value = ifelse(p_values < 0.001, "<0.001", round(p_values, 2))
  )
  return(table_data)
}

# 生成變量名稱的函數
create_variable_names <- function(show_names, prefix, group_names) {
  c(show_names, gsub(prefix, "", group_names[grep(prefix, group_names)]))
}


# 生成 OR (95% CI) 的函數
create_or_ci <- function(prefix, data) {
  indices <- grep(prefix, rownames(data))
  or_ci <- paste(data$OR[indices],"([", data$Lower_95_CI[indices], ",",
                 data$Upper_95_CI[indices], "])", sep = "")
  if (length(indices) > 1) {
    return(c(NA, or_ci))
  } else {
    return(or_ci)
  }
}


# 生成 P value 的函數
create_p_values <- function(prefix, data) {
  indices <- grep(prefix, rownames(data))
  if (length(indices) > 1) {
    return(c(NA, data$P_value[indices]))
  } else {
    return(data$P_value[indices])
  }
}


# 將單個OR與P value 連接起來
all_OR_P <- function(vars, data) {
  OR <- c()
  P <- c()
  
  for (var in vars) {
    OR <- c(OR, create_or_ci(var, data))
    P <- c(P, create_p_values(var, data))
  }
  return(list(OR = OR, P = P))
}


EX.
other_glm <- glm(`不施行之其他維生醫療(其他)` ~ region_group + Barthel_group + GCS_group_near_dnr + DIAGNOSISTYPE_group_cancer + befor_dnr_Hemodialysis + I_group_before_need_time + O_group_before_need_time, data = need_data, family=binomial)
other_null <- glm(`不施行之其他維生醫療(其他)` ~ 1, data = need_data_clean, family = binomial)
other_stepwise <- step(other_null, scope = list(lower = other_null, upper = other_glm), direction = "both")

# other_stepwise
data_other <- generate_table_data(other_stepwise)

need_grep_other <- c("region_group","befor_dnr_Hemodialysis","DIAGNOSISTYPE_group_cancer",
                     "O_group_before_need_time")

# 創建結果表
data_other_stepwise <- data.frame(
  Variable = c(# Region 
               create_variable_names("Region", "region_group", rownames(data_DNR_sign)),
               # Hemodialysis
               "Hemodialysis(YES)", 
               # cancer
               "cancer(NO)",
               # Outpatient
               "Outpatient",
                  "7-12 times", "13-24 times", "More than 25 times"), 
  `OR (95% CI)` =  all_OR_P(need_grep_other,data_other)$OR,
  `P value` = all_OR_P(need_grep_other,data_other)$P
)

# 將 NA 值填充為空字串
data_other_stepwise[is.na(data_other_stepwise)] <- ""

# 設定列名
colnames(data_other_stepwise) <- c("Variable", "OR (95% CI)", "P value")

# 製作表格
table_other <- kable(data_other_stepwise, align = "l",
               caption = "其他 logistic regression",escape = T) %>%
  kable_styling(full_width = FALSE) %>%

  row_spec(setdiff(which(data_other_stepwise$`OR (95% CI)`!=""),
           grep("\\(", data_other_stepwise$Variable )), extra_css = "padding-left: 20px;") %>%  # 增加左邊距

  scroll_box(height = "700px")

# 创建表格并应用样式
#kable(data, align = "l", caption = "基本資料(N=28801)")

table_other
